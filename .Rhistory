library(readr)
library(irr)
one_kappa = function(rater1, rater2) {
# calculates and prints Cohen's kappa for the transformed ratings (0 and 1s)
# Apply transformation rules to coded data
rater1_transformed = transform_codes(data.frame(rater1, row.names = 1))
rater2_transformed = transform_codes(data.frame(rater2, row.names = 1))
# Transformed data must be in the form of a matrix with dim (n*m) rows and one column
# with n = number of participants and m = number of tasks
rater1_col = vector()
for (i in 1:nrow(rater1_transformed)) {
for (j in 1:ncol(rater1_transformed)) {
rater1_col = append(rater1_col,rater1_transformed[i,j])
}
}
rater2_col = vector()
for (i in 1:nrow(rater2_transformed)) {
for (j in 1:ncol(rater2_transformed)) {
rater2_col = append(rater2_col,rater2_transformed[i,j])
}
}
# Determine inter-rater reliability using Cohen's Kappa
kappa2(cbind(rater1_col,rater2_col))
}
kappa_per_task = function(rater1, rater2) {
# calcuates and prints Cohen's kappa for each task for the coded, non-transformed values
rater1 = data.frame(rater1, row.names = 1)
rater2 = data.frame(rater2, row.names = 1)
avg = 0
for (j in 1:ncol(rater1)) {
kap = kappa2(cbind(rater1[,j],rater2[,j]))$value
print(kap)
avg = avg + kap
}
print("Average:")
print(avg/ncol(rater1))
}
# Set working directory to folder where all R code related to the study is stored
# Note: this path must be changed if the code is used on a different computer
setwd("C:/Users/Sina-/Dropbox/Lehrstuhl/Diss/Auswertung/R")
# Load helper functions
source("transformation_0_1/transform_codes_to_0_1.R")
# Read coded data of the three raters for classes 17-20
marc_raw <- read_csv2("irr/input_data/marc_17_20.csv", show_col_types = FALSE)
felix_raw <- read_csv2("irr/input_data/felix_17_20.csv", show_col_types = FALSE)
one_kappa(marc_raw,felix_raw)
kappa_per_task(marc_raw,felix_raw)
library(readr)
# Set working directory to folder where all R code related to the study is stored
setwd("C:/Users/Sina-/Dropbox/Lehrstuhl/Diss/Auswertung/R")
# Load helper functions
source("transformation_0_1/transform_codes_to_0_1.R")
# Read coded data of classes 13-20 as coded by Felix
data_raw = read_csv2("gdm_24/input_data/felix_raw_13-20.csv", show_col_types = FALSE)
data = transform_codes(data_raw)
View(data_raw)
data = transform_codes(data.frame(data_raw, row.names = 1))
# Read coded data of classes 13-20 as coded by Felix
data_raw = data.frame(read_csv2("gdm_24/input_data/felix_raw_13-20.csv", show_col_types = FALSE), row.names = 1)
View(data_raw)
dim(data_raw)
# Read coded data of classes 13-20 as coded by Felix
data_raw = data.frame(read_csv2("gdm_24/input_data/felix_raw_13-20.csv", show_col_types = FALSE), row.names = 1)
data = transform_codes(data_raw)
dim(data_raw)
# Read coded data of classes 13-20 as coded by Felix
data_raw = data.frame(read_csv2("gdm_24/input_data/felix_raw_13-20.csv", show_col_types = FALSE), row.names = 1)
data = transform_codes(data_raw)
View(data)
# TODO: muss noch sauber gemacht werden. Für erste werden jetzt alle unklaren Einträge durch 0 ersetzt
data_copy = data
data[data != "1" && data != "0" && data != "na"] = "0"
data[data != "1" & data != "0" & data != "na"] = "0"
View(data)
for (i in 1:nrow(data)) {
code = data$Title[i]
print(code)
}
rownames(data_raw)
# Um nur die Dimension Verstehensorientierung zu unterscheiden, betrachte die Treatmentgruppen 1 und 3 (Code endet mit 1 oder 3)
data_comp = data.frame()
for (i in 1:nrow(data)) {
if (substring(rownames(data_raw)[i],5,5) %in% c("1","3")) {
data_comp = rbind(data_comp, data[i, ])
}
}
View(data_comp)
dim(data_comp)
row.names(data) = rownames(data_raw)
View(data)
rownames(data)[3]
rownames(data)[3] %in% c("1","3")
substring(rownames(data)[3],5,5)
for (i in 1:nrow(data)) {
if (substring(rownames(data)[i],1,1) %in% c("1","3")) {
data_comp = rbind(data_comp, data[i, ])
}
}
View(data_comp)
dim(data_comp)
write.csv2(data_comp, "gdm_24/output_data/class13-20_gruppe_1_3.csv")
write.csv2
write.csv2(data_comp, file = "gdm_24/output_data/class13-20_gruppe_1_3.csv")
# create Q matrix (which items are procedural and which items are conceptual)
I <- 12
Q <- array( 0, dim=c( 2*I, 2 ))
Q[cbind(1:(2*I), c( rep(1,I), rep(2,I) ))] <- 1
View(Q)
library(readr)
library(TAM)
# Set working directory to folder where all R code related to the study is stored
setwd("C:/Users/Sina-/Dropbox/Lehrstuhl/Diss/Auswertung/R")
# get data
data <- read_csv2("/gdm_24/output_data/class13-20_gruppe_1_3.csv", show_col_types = FALSE)
# get data
data <- read_csv2("gdm_24/output_data/class13-20_gruppe_1_3.csv", show_col_types = FALSE)
View(data)
